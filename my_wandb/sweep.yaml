program: train.py
method: bayes
metric:
  name: "mae"
  goal: minimize
parameters:
  appliance:
    distribution: categorical
    values:
      - fridge
  on_threshold:
    distribution: categorical
    values: [ 50 ]
  max_power:
    distribution: categorical
    values: [ 300 ]
  min_on_duration:
    distribution: categorical
    values: [ 60 ]
  min_off_duration:
    distribution: categorical
    values: [ 12 ]
  batch_size:
    distribution: categorical
    values: [ 64 ]
  epochs:
    distribution: int_uniform
    min: 2
    max: 15
  learning_rate:
    distribution: uniform
    min: 0.000005
    max: 0.0002
  optimizer:
    distribution: categorical
    values:
      - adam
  loss:
    distribution: categorical
    values:
      - bert4nilm_loss
  tau:
    distribution: categorical
    values: [ 1.0 ]
  lambda_val:
    distribution: categorical
    values: [ 1e-6 , 1e-3, 1.0 ]
  window_size:
    distribution: categorical
    values: [ 120, 240, 360, 480, 600 ]
  masking_portion:
    distribution: categorical
    values: [ 0.2, 0.25, 0.3 ]
  conv_kernel_size:
    distribution: categorical
    values: [ 5 ]
  conv_strides:
    distribution: categorical
    values: [ 1 ]
  conv_padding:
    distribution: categorical
    values: [ 2 ]
  conv_activation:
    distribution: categorical
    values:
      - relu
  hidden_size:
    distribution: categorical
    values: [ 128, 197, 256, 333 ]
  num_heads:
    distribution: categorical
    values: [ 1, 2, 3 ]
  n_layers:
    distribution: int_uniform
    min: 1
    max: 3
  dropout:
    distribution: categorical
    values: [ 0.1 ]
  layer_norm_epsilon:
    distribution: categorical
    values: [ 1e-6 ]
  dense_activation:
    distribution: categorical
    values:
      - gelu
  deconv_kernel_size:
    distribution: categorical
    values: [ 4 ]
  deconv_strides:
    distribution: categorical
    values: [ 2 ]
  deconv_padding:
    distribution: categorical
    values: [ 1 ]
  deconv_activation:
    distribution: categorical
    values:
      - relu
  ff_dim:
    distribution: categorical
    values: [ 256 ]
  output_size:
    distribution: categorical
    values: [ 1 ]
